{"version":3,"sources":["components/pages/Registration.js","components/pages/Dashboard.js","components/subcomponent/Header.js","components/routers/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","history","useHistory","useState","firstName","lastName","address1","address2","city","state","zip","country","registerForm","setRegistration","validForm","setValidForm","validateData","validatedForm","noError","length","test","trim","resetData","Form","id","Row","Group","as","Col","controlId","Label","Control","value","type","placeholder","name","onChange","e","target","defaultValue","disabled","Button","onClick","a","axios","post","push","console","log","preventDefault","postData","variant","Dashboard","users","setUsers","useEffect","get","resp","data","fetchData","Table","striped","bordered","hover","sort","b","Date","dateAdded","map","user","i","Header","location","useLocation","pathname","AppRouter","exact","path","component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e53ee88.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {Form, Col, Button} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Registration() {\n\n    const history = useHistory();\n\n    const [registerForm, setRegistration] = useState({\n        firstName:'',\n        lastName: '',\n        address1: '',\n        address2: '',\n        city: '',\n        state: '',\n        zip: '',\n        country: ''\n    });\n\n    const [validForm, setValidForm] = useState({\n        firstName:true,\n        lastName: true,\n        address1: true,\n        address2: true,\n        city: true,\n        state: true,\n        zip: true,\n        country: true\n    });\n\n    const submitData = (e) => {\n        e.preventDefault();\n        resetData();\n\n        if (!validateData()) return;\n\n        async function postData() {\n            try {\n               await axios.post(\"/db/add\", { \n                   firstName: registerForm.firstName,\n                   lastName: registerForm.lastName,\n                   address1: registerForm.address1,\n                   address2: registerForm.address2,\n                   city: registerForm.city,\n                   state: registerForm.state,\n                   zip: registerForm.zip,\n                   country: registerForm.country});\n                       \n                   history.push('/');\n                    \n           }catch(err) {\n               console.log(err);\n           }\n        }\n\n        postData();\n\n\n       \n    }\n\n    const validateData = () => {\n       let validatedForm = {...validForm};\n       let noError = true;\n       if (registerForm.firstName.length < 2 || !(/^[a-zA-Z]+$/).test(registerForm.firstName.trim())) {\n           validatedForm.firstName = false;\n           noError = false;\n       }\n\n       if (registerForm.lastName.length < 2 || !(/^[a-zA-Z]+$/).test(registerForm.lastName.trim())) {\n           validatedForm.lastName = false;\n           noError = false;\n       }\n\n       if (registerForm.address1.length < 7 || !(/^[a-zA-Z\\s0-9]+$/).test(registerForm.address1.trim())) {\n            validatedForm.address1 = false;\n            noError = false;\n       }\n\n       if (registerForm.city.length  <  2 || !(/^[a-zA-Z\\s]+$/).test(registerForm.city.trim())) {\n             validatedForm.city = false;\n             noError = false;\n        }\n\n        if (registerForm.state.length !== 2 ) {\n             validatedForm.state = false;\n             noError = false;\n        }\n\n        if (registerForm.zip.trim().length !== 5 || !(/^\\d+$/).test(registerForm.zip.trim())) {\n            validatedForm.zip = false;\n            noError = false;\n        }\n        if (registerForm.country !== 'US') {\n             validatedForm.country = false;\n             noError = false;\n        }\n         setValidForm({...validatedForm});\n         return noError;\n    }\n\n    const resetData = () => {\n        validForm.firstName = true;\n        validForm.lastName = true;\n        validForm.address1 = true;\n        validForm.city = true;\n        validForm.state = true;\n        validForm.country = true;\n        validForm.zip = true;\n        setValidForm({...validForm});\n    }\n\n    return ( \n        <Form id=\"register-form\">\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridFirstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control value={registerForm.firstName} \n                    type=\"text\" \n                    placeholder=\"Enter First Name\"\n                    name=\"firstName\"\n                    onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})} />\n           {validForm.firstName ? \"\" : <p><i>First Name not formatted correctly</i></p>}\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridLastName\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control \n                    value={registerForm.lastName} \n                    type=\"text\" placeholder=\"Enter Last Name\" \n                    name=\"lastName\"\n                    onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})}/>\n            {validForm.lastName ? \"\" : <p><i>Last Name not formatted correctly</i></p>}\n            </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"formGridAddress1\">\n            <Form.Label>Address 1</Form.Label>\n            <Form.Control \n                    value={registerForm.address1}\n                    placeholder=\"1234 Main St\" \n                    name=\"address1\" \n                    onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})}\n                    />\n             {validForm.address1 ? \"\" : <p><i>Address1 not formatted correctly</i></p>}\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridAddress2\">\n            <Form.Label>Address 2 (optional)</Form.Label>\n            <Form.Control \n                    value={registerForm.address2}\n                    placeholder=\"Apartment, studio, or floor\" \n                    name=\"address2\"\n                    onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})}\n                    />\n        </Form.Group>\n\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridCity\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n                    value={registerForm.city} \n                    placeholder=\"city\"\n                    name=\"city\"\n                    onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})}/>\n             {validForm.lastName ? \"\" : <p><i>City not formatted correctly</i></p>}\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n            <Form.Label>State</Form.Label>\n            <Form.Control as=\"select\" defaultValue=\"Choose...\" name=\"state\"\n             onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})}>\n                <option disabled>Choose...</option>\n                <option value=\"AL\">AL</option>\n                              <option value=\"AK\">AK</option>\n                              <option value=\"AR\">AR</option>\n                              <option value=\"AZ\">AZ</option>\n                              <option value=\"CA\">CA</option>\n                              <option value=\"CO\">CO</option>\n                              <option value=\"CT\">CT</option>\n                              <option value=\"DC\">DC</option>\n                              <option value=\"DE\">DE</option>\n                              <option value=\"FL\">FL</option>\n                              <option value=\"GA\">GA</option>\n                              <option value=\"HI\">HI</option>\n                              <option value=\"IA\">IA</option>\n                              <option value=\"ID\">ID</option>\n                              <option value=\"IL\">IL</option>\n                              <option value=\"IN\">IN</option>\n                              <option value=\"KS\">KS</option>\n                              <option value=\"KY\">KY</option>\n                              <option value=\"LA\">LA</option>\n                              <option value=\"MA\">MA</option>\n                              <option value=\"MD\">MD</option>\n                              <option value=\"ME\">ME</option>\n                              <option value=\"MI\">MI</option>\n                              <option value=\"MN\">MN</option>\n                              <option value=\"MO\">MO</option>\n                              <option value=\"MS\">MS</option>\n                              <option value=\"MT\">MT</option>\n                              <option value=\"NC\">NC</option>\n                              <option value=\"NE\">NE</option>\n                              <option value=\"NH\">NH</option>\n                              <option value=\"NJ\">NJ</option>\n                              <option value=\"NM\">NM</option>\n                              <option value=\"NV\">NV</option>\n                              <option value=\"NY\">NY</option>\n                              <option value=\"ND\">ND</option>\n                              <option value=\"OH\">OH</option>\n                              <option value=\"OK\">OK</option>\n                              <option value=\"OR\">OR</option>\n                              <option value=\"PA\">PA</option>\n                              <option value=\"RI\">RI</option>\n                              <option value=\"SC\">SC</option>\n                              <option value=\"SD\">SD</option>\n                              <option value=\"TN\">TN</option>\n                              <option value=\"TX\">TX</option>\n                              <option value=\"UT\">UT</option>\n                              <option value=\"VT\">VT</option>\n                              <option value=\"VA\">VA</option>\n                              <option value=\"WA\">WA</option>\n                              <option value=\"WI\">WI</option>\n                              <option value=\"WV\">WV</option>\n                              <option value=\"WY\">WY</option>\n            </Form.Control>\n            {validForm.state ? \"\" : <p><i>Must choose a state</i></p>}\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n            <Form.Label>Zip</Form.Label>\n            <Form.Control \n                name=\"zip\"\n                onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})}/>\n              {validForm.zip ? \"\" : <p><i>Zip not formatted correctly</i></p>}\n            </Form.Group>\n        </Form.Row>\n\n        <Form.Group as={Col} controlId=\"formGridCountry\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control as=\"select\" defaultValue=\"Choose...\" name=\"country\"  \n                    onChange={e => setRegistration({...registerForm, [e.target.name]: e.target.value})}>\n                <option disabled >Choose...</option>\n                <option>US</option>\n            </Form.Control>\n            {validForm.country ? \"\" : <p><i>Must choose a country</i></p>}\n            </Form.Group>\n\n            <Button onClick={submitData} variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n            </Form>\n   \n    )\n}\n\nexport default Registration;","import {useEffect, useState} from 'react';\nimport {Table} from 'react-bootstrap';\nimport axios from 'axios';\n\nfunction Dashboard() {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const resp = await axios.get(\"db/all\");\n            console.log(resp);\n            setUsers(resp.data);\n        }\n        \n        fetchData();\n    }, [])\n    return (\n        <>\n          <Table variant=\"dark\" striped bordered hover>\n            <thead>\n                <tr>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Address1</th>\n                    <th>Address2</th>\n                    <th>City</th>\n                    <th>State</th>\n                    <th>Zip</th>\n                    <th>Country</th>\n                    <th>Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.length > 0 ? users.sort((a,b) => {\n                    return new Date(b.dateAdded) - new Date(a.dateAdded);\n                }).map((user, i) => (\n                    <tr key={i}>\n                        <td>{user.firstName}</td>\n                        <td>{user.lastName}</td>\n                        <td>{user.address1}</td>\n                        <td>{user.address2 || ''}</td>\n                        <td>{user.city}</td>\n                        <td>{user.state}</td>\n                        <td>{user.zip}</td>\n                        <td>{user.country}</td>\n                        <td>{user.dateAdded}</td>\n                    </tr>\n                )) : \"\"}\n            </tbody>\n            </Table>\n        </>\n    )\n}\n\nexport default Dashboard;","import { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function Header() {\n    const history = useHistory();\n    const location = useLocation();\n    \n    const addUser = () => {\n        history.push(\"/register\");\n    }\n\n    useEffect(() => {\n        console.log(location.pathname);\n\n    }, []);\n    return(\n        <header>\n            <div id=\"title\">\n                    <h1>Registration Database</h1>\n                    <Button onClick={addUser} >Add User</Button>\n            </div>  \n        </header>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router,\n        Switch, Route} from 'react-router-dom';\nimport Registration from '../pages/Registration'; \nimport Dashboard from '../pages/Dashboard';  \nimport Header from '../subcomponent/Header';     \n\nexport default function AppRouter() {\n        return(\n                <Router>\n                       <Header />\n                        <Switch>\n                                <Route exact path=\"/\" component={Dashboard} />\n                                <Route path=\"/register\" component={Registration}/>\n                        </Switch>\n                </Router>\n        );\n}","import AppRouter from './components/routers/AppRouter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}